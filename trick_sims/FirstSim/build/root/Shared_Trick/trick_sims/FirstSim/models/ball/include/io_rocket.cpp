/**
 * This file was automatically generated by the ICG based on the file:
 * /root/Shared_Trick/trick_sims/FirstSim/models/ball/include/rocket.h
 * This file contains database parameter declarations specific to the
 * data structures and enumerated types declared in the above file.
 * These database parameters are used by the Trick input and
 * data recording processors to gain access to important simulation
 * variable information.
 */

#define TRICK_IN_IOSRC
#include <stdlib.h>
#include "trick/MemoryManager.hh"
#include "trick/attributes.h"
#include "trick/parameter_types.h"
#include "trick/ClassSizeCheck.hh"
#include "trick/UnitsMap.hh"
#include "trick/checkpoint_stl.hh"
#include "/root/Shared_Trick/trick_sims/FirstSim/models/ball/include/rocket.h"

extern "C" {

ATTRIBUTES attrROCKET[] = {
{"init_thrust", "double", "N", "", "",
  "Force of thrust generated by rocket",
  10,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"vel0", "double", "m", "", "",
  "Init velocity of rocket",
  10,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  8, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"pos0", "double", "m", "", "",
  "Init position of rocket",
  10,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  24, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_angle", "double", "rad", "", "",
  "Angle of rocket",
  10,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  40, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"mass", "double", "kg", "", "",
  "Mass of rocket",
  10,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"airDensity", "double", "kg/m3", "", "",
  "air density (rho)",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  56, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"drag", "double", "N", "", "",
  "xy-drag forces",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  64, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"gravityForce", "double", "N", "", "",
  "Force of gravity on rocket",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  80, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"thrust", "double", "N", "", "",
  "xy-thrust of rocket",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  88, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"acc", "double", "m/s2", "", "",
  "xy-acceleration",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  104, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"vel", "double", "m/s", "", "",
  "xy-velocity",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  120, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"pos", "double", "m", "", "",
  "xy-position",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  136, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"angle", "double", "rad", "", "",
  "Angle of Rocket which will change from 90",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  152, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"time", "double", "s", "", "",
  "Model time",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  160, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"impact", "int", "1", "", "",
  "Has impact occured?",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  168, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"impactTime", "double", "s", "", "",
  "Time of Impact",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  176, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"


void init_attrROCKET() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

}

extern "C" {

void init_attrROCKET_c_intf() {
    init_attrROCKET() ;
}

size_t io_src_sizeof_ROCKET() {
    return sizeof(ROCKET) ;
}

void* io_src_allocate_ROCKET(int num) {
    ROCKET* temp = (ROCKET*)calloc(num, sizeof(ROCKET));
    return (void*)temp;
}

void io_src_destruct_ROCKET(void* address __attribute__((unused)), int num __attribute__((unused))) {
}

void io_src_delete_ROCKET(void* address __attribute__((unused))) {}

} //extern "C"

struct UnitsMapROCKET {
    UnitsMapROCKET() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("ROCKET_init_thrust", "N") ;
        units_map_ptr->add_param("ROCKET_vel0", "m") ;
        units_map_ptr->add_param("ROCKET_pos0", "m") ;
        units_map_ptr->add_param("ROCKET_init_angle", "rad") ;
        units_map_ptr->add_param("ROCKET_mass", "kg") ;
        units_map_ptr->add_param("ROCKET_airDensity", "kg/m3") ;
        units_map_ptr->add_param("ROCKET_drag", "N") ;
        units_map_ptr->add_param("ROCKET_gravityForce", "N") ;
        units_map_ptr->add_param("ROCKET_thrust", "N") ;
        units_map_ptr->add_param("ROCKET_acc", "m/s2") ;
        units_map_ptr->add_param("ROCKET_vel", "m/s") ;
        units_map_ptr->add_param("ROCKET_pos", "m") ;
        units_map_ptr->add_param("ROCKET_angle", "rad") ;
        units_map_ptr->add_param("ROCKET_time", "s") ;
        units_map_ptr->add_param("ROCKET_impact", "1") ;
        units_map_ptr->add_param("ROCKET_impactTime", "s") ;
    }
} umROCKET;

